import { InputStyleProps } from '../../types/props';
import { ComponentPropsWithoutRef, CSSProperties } from 'react';
interface InputProps extends InputStyleProps {
    type?: 'text' | 'password' | 'email' | 'number' | 'checkbox' | 'radio' | 'submit' | 'reset' | 'button' | 'file' | 'hidden' | 'image' | 'search' | 'tel' | 'url' | 'date' | 'datetime-local' | 'month' | 'week' | 'time' | 'color' | 'range';
    className?: string;
    name?: string;
    style?: CSSProperties;
    title?: string;
    id?: string;
    value?: string | number | readonly string[];
    defaultValue?: string | number | readonly string[];
    checked?: boolean;
    disabled?: boolean;
    placeholder?: string;
    required?: boolean;
    onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;
    onBlur?: (event: React.FocusEvent<HTMLInputElement>) => void;
    onKeyDown?: (event: React.KeyboardEvent<HTMLInputElement>) => void;
    noDefaultStyle?: boolean;
}
interface HTMLInputProps extends Omit<ComponentPropsWithoutRef<'input'>, keyof InputProps> {
}
interface Props extends InputProps {
    htmlAttributes?: HTMLInputProps;
}
declare const InputWithRef: import('react').ForwardRefExoticComponent<Props & import('react').RefAttributes<HTMLInputElement>>;
export default InputWithRef;
