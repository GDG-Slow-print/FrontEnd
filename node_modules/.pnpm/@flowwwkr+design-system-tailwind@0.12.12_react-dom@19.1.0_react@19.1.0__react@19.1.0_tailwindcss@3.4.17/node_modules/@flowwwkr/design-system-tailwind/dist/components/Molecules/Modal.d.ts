import { ButtonStyleProps, FlexStyleProps, IconStyleProps } from '../../types/props';
interface ModalProps {
    isModalOpen: boolean;
    /**
     * Size of the Modal.
     * Controls the width, height, and padding of the component.
     * @default 'md'
     */
    size?: 'sm' | 'md' | 'lg' | 'cover' | 'full';
    /**
     * Color variant of the Modal.
     * Determines the primary theme color of the component.
     * @default 'neutral'
     */
    color?: 'primary' | 'secondary' | 'tertiary' | 'neutral';
    /**
     * Placement of the Modal on the screen.
     * Determines where the modal appears (top, bottom, center).
     * @default 'center'
     */
    placement?: 'top' | 'bottom' | 'center';
    /**
     * Placement of the close button.
     * Defines whether the close button is inside, outside, or hidden.
     * @default 'inside'
     */
    closeButtonPlacement?: 'inside' | 'outside' | 'none';
    /**
     * Custom header component for the Modal.
     * A React node or JSX element to render as the header.
     */
    header?: React.ReactNode;
    /**
     * Content of the Modal.
     * Children elements or components to display inside the modal.
     */
    children?: React.ReactNode;
    /**
     * Custom footer component for the Modal.
     * A React node or JSX element to render as the footer.
     */
    footer?: React.ReactNode;
    /**
     * Theme variant of the Modal.
     * Defines the visual style of the component (e.g., dialog or custom).
     * @default 'dialog'
     */
    theme?: 'dialog' | 'custom';
    /**
     * Style properties for the container of the Modal (root element).
     * Should follow the <Flex> component style conventions.
     */
    rootStyle?: FlexStyleProps;
    /**
     * Style properties for the main content area of the Modal.
     * Should follow the <Flex> component style conventions.
     */
    mainStyle?: FlexStyleProps;
    /**
     * Style properties for the close button.
     * Should follow the <Button theme='ghost'> component style conventions.
     */
    closeButtonStyle?: ButtonStyleProps;
    /**
     * Style properties for the close button icon.
     * Should follow the <Icon> component style conventions.
     */
    closeButtonIconStyle?: IconStyleProps;
    /**
     * Callback function to close the Modal.
     */
    closeModal: () => void;
}
/**
 * Modal Component
 *
 * A versatile modal component for creating flexible dialogs with customizable size, color, placement, and more.
 * It supports headers, footers, and custom children, along with various styles and behaviors.
 *
 * **Structure**:
 * ```tsx
 * <Root>
 *   <Main>
 *     <CloseButton>
 *       <IconClose />
 *     </CloseButton>
 *     {header}
 *     {children}
 *     {footer}
 *   </Main>
 * </Root>
 * ```
 *
 * **Props**:
 * @param {object} props - The properties object for the Modal component.
 * @param {boolean} props.isModalOpen - Determines if the modal is open or closed.
 * @param {'sm' | 'md' | 'lg' | 'cover' | 'full'} [props.size='md'] - Size of the modal, controlling its width, height, and padding.
 * @param {'primary' | 'secondary' | 'tertiary' | 'neutral'} [props.color='neutral'] - Color variant of the modal, defining its theme.
 * @param {'top' | 'bottom' | 'center'} [props.placement='center'] - Placement of the modal on the screen.
 * @param {'inside' | 'outside' | 'none'} [props.closeButtonPlacement='inside'] - Placement of the close button relative to the modal.
 * @param {React.ReactNode} [props.header] - Custom header component to render at the top of the modal.
 * @param {React.ReactNode} [props.children] - Content of the modal.
 * @param {React.ReactNode} [props.footer] - Custom footer component to render at the bottom of the modal.
 * @param {FlexStyleProps} [props.rootStyle] - Style properties for the root (background) of the modal.
 * @param {FlexStyleProps} [props.mainStyle] - Style properties for the main content area of the modal.
 * @param {ButtonStyleProps} [props.closeButtonStyle] - Style properties for the close button.
 * @param {IconStyleProps} [props.closeButtonIconStyle] - Style properties for the close button icon.
 * @param {() => void} props.closeModal - Callback function to close the modal.
 *
 * **Examples**:
 * ```tsx
 * <Modal
 *   isModalOpen={true}
 *   size="lg"
 *   color="primary"
 *   placement="center"
 *   Header={<h1>Header Content</h1>}
 *   Footer={<footer>Footer Content</footer>}
 *   closeModal={() => console.log('Modal closed')}
 * >
 *   <p>Modal Body Content</p>
 * </Modal>
 * ```
 */
declare const Modal: ({ isModalOpen, size, color, placement, closeButtonPlacement, theme, header, children, footer, closeModal, rootStyle, mainStyle, closeButtonStyle, closeButtonIconStyle, }: ModalProps) => import("react/jsx-runtime").JSX.Element;
export default Modal;
