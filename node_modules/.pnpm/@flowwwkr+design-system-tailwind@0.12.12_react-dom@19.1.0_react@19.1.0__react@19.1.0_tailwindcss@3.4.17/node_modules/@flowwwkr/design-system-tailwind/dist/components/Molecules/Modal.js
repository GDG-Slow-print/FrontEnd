"use client";
import { jsx as n, Fragment as ht, jsxs as ft } from "react/jsx-runtime";
import { useRef as pt } from "react";
import gt from "../Atoms/Button.js";
import St from "../Atoms/Flex.js";
import i from "../../utils/deepMerge.js";
import xt from "../Icons/IconClose.js";
import Bt from "../Atoms/FlexWithRef.js";
const jt = ({
  isModalOpen: U,
  size: t = "md",
  color: d = "neutral",
  placement: e = "center",
  closeButtonPlacement: r = "inside",
  theme: l = "dialog",
  header: Z,
  children: _,
  footer: $,
  closeModal: m,
  rootStyle: tt,
  mainStyle: ot,
  closeButtonStyle: lt,
  closeButtonIconStyle: et
}) => {
  var u, h, f, p, g, S, x, B, w, b, z, T, C, W, H, j, R, k, V, X, Y, D, I, F, M, v, A, q, E, G, J, K, L, N, O, P;
  const s = pt(null), o = {
    sm: {
      mainStyle: {
        width: "w-44",
        maxWidth: "xw-90%",
        height: "h-auto",
        maxHeight: "xh-90%",
        padding: l === "dialog" ? "p-3" : "p-0",
        gap: "g-4"
      },
      closeButtonStyle: { size: "sz-2" }
    },
    md: {
      mainStyle: {
        width: "w-72",
        maxWidth: "xw-90%",
        height: "h-auto",
        maxHeight: "xh-90%",
        padding: l === "dialog" ? "p-3" : "p-0",
        gap: "g-4"
      },
      closeButtonStyle: { size: "sz-2" }
    },
    lg: {
      mainStyle: {
        width: "w-96",
        maxWidth: "xw-90%",
        height: "h-auto",
        maxHeight: "xh-90%",
        padding: l === "dialog" ? "p-3" : "p-0",
        gap: "g-4"
      },
      closeButtonStyle: { size: "sz-2" }
    },
    cover: {
      mainStyle: {
        width: "w-90%",
        maxWidth: "xw-90%",
        height: "h-90%",
        maxHeight: "xh-90%",
        padding: l === "dialog" ? "p-3" : "p-0",
        gap: "g-4"
      },
      closeButtonStyle: { size: "sz-2" }
    },
    full: {
      mainStyle: {
        width: "w-full",
        maxWidth: "xw-full",
        height: "h-full",
        maxHeight: "xh-full",
        padding: l === "dialog" ? "p-3" : "p-0",
        gap: "g-4"
      },
      closeButtonStyle: { size: "sz-2" }
    }
  }, y = {
    primary: {
      mainStyle: {
        color: "c-primary-sf-00"
      },
      closeButtonStyle: {
        color: "c-primary-obj"
      }
    },
    secondary: {
      mainStyle: {
        color: "c-secondary-sf-00"
      },
      closeButtonStyle: {
        color: "c-secondary-obj"
      }
    },
    tertiary: {
      mainStyle: {
        color: "c-tertiary-sf-00"
      },
      closeButtonStyle: {
        color: "c-tertiary-obj"
      }
    },
    neutral: {
      mainStyle: {
        color: "c-neutral-sf-00"
      },
      closeButtonStyle: {
        color: "c-neutral-obj"
      }
    }
  }, a = {
    top: {
      mainStyle: {
        top: "t-5%",
        left: "l-50%",
        transformTranslateX: "-trlx-50%",
        transformTranslateY: "-trly-0"
      }
    },
    bottom: {
      mainStyle: {
        bottom: "b-5%",
        left: "l-50%",
        transformTranslateX: "-trlx-50%",
        transformTranslateY: "-trly-0"
      }
    },
    center: {
      mainStyle: {
        top: "t-50%",
        left: "l-50%",
        transformTranslateX: "-trlx-50%",
        transformTranslateY: "-trly-50%"
      }
    }
  }, c = {
    inside: {
      closeButtonStyle: {
        display: "flex",
        top: "t-3",
        right: "r-3"
      }
    },
    outside: {
      closeButtonStyle: {
        display: "flex",
        top: "t-3",
        right: "-r-3"
      }
    },
    none: {
      closeButtonStyle: {
        display: "hidden"
      }
    }
  }, at = {
    dialog: {
      mainStyle: {
        direction: "flex-col"
      }
    },
    custom: {
      mainStyle: {
        direction: "flex-row"
      }
    }
  }, nt = St, it = {
    position: "fixed",
    width: "w-full",
    height: "h-full",
    top: "t-0",
    left: "l-0",
    zIndex: "z-1001"
  }, rt = Bt, st = {
    position: "absolute",
    top: (h = (u = a[e]) == null ? void 0 : u.mainStyle) == null ? void 0 : h.top,
    bottom: (p = (f = a[e]) == null ? void 0 : f.mainStyle) == null ? void 0 : p.bottom,
    left: (S = (g = a[e]) == null ? void 0 : g.mainStyle) == null ? void 0 : S.left,
    width: (B = (x = o[t]) == null ? void 0 : x.mainStyle) == null ? void 0 : B.width,
    maxWidth: (b = (w = o[t]) == null ? void 0 : w.mainStyle) == null ? void 0 : b.maxWidth,
    height: (T = (z = o[t]) == null ? void 0 : z.mainStyle) == null ? void 0 : T.height,
    maxHeight: (W = (C = o[t]) == null ? void 0 : C.mainStyle) == null ? void 0 : W.maxHeight,
    padding: (j = (H = o[t]) == null ? void 0 : H.mainStyle) == null ? void 0 : j.padding,
    direction: (k = (R = at[l]) == null ? void 0 : R.mainStyle) == null ? void 0 : k.direction,
    gap: (X = (V = o[t]) == null ? void 0 : V.mainStyle) == null ? void 0 : X.gap,
    color: (D = (Y = y[d]) == null ? void 0 : Y.mainStyle) == null ? void 0 : D.color,
    borderRadius: "rad-1",
    transformTranslateX: (F = (I = a[e]) == null ? void 0 : I.mainStyle) == null ? void 0 : F.transformTranslateX,
    transformTranslateY: (v = (M = a[e]) == null ? void 0 : M.mainStyle) == null ? void 0 : v.transformTranslateY
  }, ct = gt, dt = {
    position: "absolute",
    display: (q = (A = c[r]) == null ? void 0 : A.closeButtonStyle) == null ? void 0 : q.display,
    top: (G = (E = c[r]) == null ? void 0 : E.closeButtonStyle) == null ? void 0 : G.top,
    right: (K = (J = c[r]) == null ? void 0 : J.closeButtonStyle) == null ? void 0 : K.right,
    size: (N = (L = o[t]) == null ? void 0 : L.closeButtonStyle) == null ? void 0 : N.size,
    color: (P = (O = y[d]) == null ? void 0 : O.closeButtonStyle) == null ? void 0 : P.color
  }, mt = xt, yt = {
    color: "c-inherit",
    size: "sz-full"
  }, ut = (Q) => {
    s.current && !s.current.contains(Q.target) && (Q.stopPropagation(), m());
  };
  return /* @__PURE__ */ n(ht, { children: U && /* @__PURE__ */ n(
    nt,
    {
      ...i(it, tt || {}),
      noDefaultStyle: !0,
      htmlAttributes: {
        onClick: ut
      },
      style: {
        backgroundColor: "rgba(0, 0, 0, 0.5)"
      },
      children: /* @__PURE__ */ ft(
        rt,
        {
          ref: s,
          ...i(st, ot || {}),
          noDefaultStyle: !0,
          children: [
            Z,
            _,
            $,
            /* @__PURE__ */ n(
              ct,
              {
                theme: "plain",
                ...i(dt, lt || {}),
                onClick: m,
                noDefaultStyle: !0,
                hover: !0,
                children: /* @__PURE__ */ n(
                  mt,
                  {
                    ...i(
                      yt,
                      et || {}
                    ),
                    noDefaultStyle: !0
                  }
                )
              }
            )
          ]
        }
      )
    }
  ) });
};
export {
  jt as default
};
