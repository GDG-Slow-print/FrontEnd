import { FlexStyleProps, TextStyleProps } from '../../index';
import { default as React } from 'react';
type BaseRadioProps<T> = {
    /** 라디오 그룹 이름 */
    name?: string;
    /** 현재 선택된 값 */
    value: T;
    /** 값이 변경될 때 호출되는 함수 */
    onChange?: (value: T) => void;
    /** 라디오 그룹 루트 스타일 (Flex 컴포넌트 스타일) */
    rootWrapperStyle?: FlexStyleProps;
    /** 라디오 그룹 아이템 스타일 (Flex 컴포넌트 스타일) */
    itemWrapperStyle?: FlexStyleProps;
    /** 라벨 텍스트 스타일 */
    labelTextStyle?: TextStyleProps;
    /** 라디오 아이콘, 라벨 텍스트 크기 */
    size?: 'sm' | 'md' | 'lg';
    /** 라디오 그룹 옵션 */
    options?: RadioOption<T>[];
};
type WithCustomIcons = {
    enableIcon: React.ReactNode;
    disableIcon: React.ReactNode;
};
type WithoutCustomIcons = {
    enableIcon?: never;
    disableIcon?: never;
};
type RadioProps<T> = BaseRadioProps<T> & (WithCustomIcons | WithoutCustomIcons);
export type RadioOption<T> = {
    /** 라디오 그룹 옵션 라벨 String 또는 React.ReactNode */
    label: React.ReactNode | string;
    /** 라디오 그룹 옵션 값 */
    value: T;
    /** 라디오 그룹 옵션 비활성화 여부 */
    disable?: boolean;
};
/**
 * 라디오 버튼 컴포넌트
 *
 * **구조**
 * ```tsx
 * <Root>
 *   <Option>
 *     <Icon />
 *     <Label />
 *   </Option>
 *   <Option>
 *     <Icon />
 *     <Label />
 *   </Option>...
 * </Root>
 * ```
 *
 * **Props**
 * @template T - 라디오 버튼 옵션 값의 타입
 * @param {FlexStyleProps} [props.rootWrapperStyle] - 라디오 버튼 그룹 스타일 (전체 Flex 컴포넌트 스타일)
 * @param {FlexStyleProps} [props.itemWrapperStyle] - 라디오 버튼 아이템 스타일 (아이템 각각의 Flex 컴포넌트 스타일)
 * @param {object} props - 라디오 버튼 컴포넌트 Props
 * @param {string} [props.name] - 라디오 버튼 그룹의 이름
 * @param {T} props.value - 현재 선택된 값
 * @param {function} [props.onChange] - 값이 변경될 때 호출되는 함수
 * @param {RadioOption<T>[]} props.options - 라디오 버튼 옵션 목록
 * @param {T} [props.options.value] - 라디오 버튼 옵션 값
 * @param {React.ReactNode | string} [props.options.label] - 라디오 버튼 옵션 라벨 (String 또는 React.ReactNode)
 * @param {TextStyleProps} [props.labelTextStyle] - 라디오 버튼 옵션 라벨 텍스트 스타일
 * @param {'sm' | 'md' | 'lg'} [props.iconSize] - 라디오 버튼 아이콘, 라벨 텍스트 크기
 * @param {boolean} [props.options.disable] - 라디오 버튼 옵션 비활성화 여부
 * @param {React.ReactNode} [props.enableIcon] - 선택된 라디오 버튼 아이콘 (커스텀 아이콘 사용 시 필수)
 * @param {React.ReactNode} [props.disableIcon] - 미선택 라디오 버튼 아이콘 (커스텀 아이콘 사용 시 필수)
 * @returns
 */
declare const Radio: <T extends object | string | number>({ name, value, onChange, options, enableIcon, disableIcon, labelTextStyle, size, rootWrapperStyle, itemWrapperStyle, }: RadioProps<T>) => import("react/jsx-runtime").JSX.Element;
export default Radio;
