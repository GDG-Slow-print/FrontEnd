import { ButtonStyleProps, FlexStyleProps, IconStyleProps, InputStyleProps } from '../../types/props';
interface SearchInputProps {
    /**
     * ID attribute for the input element.
     * A unique identifier for the input field.
     */
    id?: string;
    /**
     * Name attribute for the input element.
     * Used to reference the form data after submission.
     */
    name?: string;
    /**
     * Specifies whether the input field is required.
     * If true, the field must be filled out before form submission.
     */
    required?: boolean;
    /**
     * Placeholder text displayed in the input field when it is empty.
     */
    placeholder?: string;
    /**
     * The current value of the PasswordInput.
     */
    value?: string;
    /**
     * The default value of the PasswordInput (uncontrolled).
     * Used to set the initial value before the user interacts with it.
     * If `value` is also provided, `defaultValue` is ignored.
     */
    defaultValue?: string;
    /**
     * Size of the PasswordInput.
     * Controls the height and padding of the component.
     * @default 'md'
     */
    size?: 'sm' | 'md' | 'lg';
    /**
     * Color variant of the PasswordInput.
     * Determines the primary theme color of the component.
     * @default 'neutral'
     */
    color?: 'primary' | 'secondary' | 'tertiary' | 'neutral';
    /**
     * Visual state of the PasswordInput.
     * Used to represent feedback such as errors or success.
     * @default 'default'
     */
    state?: 'default' | 'error' | 'warning' | 'success' | 'perfect';
    /**
     * Theme variant of the PasswordInput.
     * Defines the visual style of the component (e.g., filled or outlined).
     * @default 'outlined'
     */
    theme?: 'filled' | 'outlined';
    /**
     * Indicates whether the PasswordInput field is disabled.
     * If true, the field is non-interactive and visually styled as disabled.
     */
    disabled?: boolean;
    /**
     * Style properties for the container of the PasswordInput (root element).
     * Should follow the <Flex> component style conventions.
     */
    rootStyle?: FlexStyleProps;
    /**
     * Style properties for the input field itself.
     * Should follow the <Input> component style conventions.
     */
    inputStyle?: InputStyleProps;
    /**
     * Style properties for the toggle button used to show or hide the password.
     * Should follow the <Button theme='ghost'> component style conventions.
     */
    toggleStyle?: ButtonStyleProps;
    /**
     * Style properties for the toggle icon inside the toggle button.
     * Should follow the <Icon> component style conventions.
     */
    searchIconStyle?: IconStyleProps;
    /**
     * Callback function triggered when the value of the PasswordInput changes.
     * @param {string} value - The new value of the PasswordInput.
     */
    onChange?: (value: string) => void;
    onSearch?: (value: string) => void;
}
declare const SearchInput: ({ id, name, required, value, defaultValue, placeholder, size, color, state, theme, onChange, rootStyle, inputStyle, toggleStyle, searchIconStyle, disabled, onSearch, }: SearchInputProps) => import("react/jsx-runtime").JSX.Element;
export default SearchInput;
