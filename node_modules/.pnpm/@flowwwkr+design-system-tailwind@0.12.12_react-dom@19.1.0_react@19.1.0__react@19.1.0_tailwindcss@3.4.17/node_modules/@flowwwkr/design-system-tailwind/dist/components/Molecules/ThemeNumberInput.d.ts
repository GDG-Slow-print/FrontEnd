import { ButtonStyleProps, FlexStyleProps, IconStyleProps, InputStyleProps, TextStyleProps } from '../../types/props';
type FormatType = 'plain' | 'currency' | 'percent';
/**
 * Props for the ThemeNumberInput component.
 */
export interface ThemeNumberInputProps {
    id?: string;
    name?: string;
    required?: boolean;
    placeholder?: string;
    value?: number;
    defaultValue?: number;
    size?: 'sm' | 'md' | 'lg';
    color?: 'primary' | 'secondary' | 'tertiary' | 'neutral';
    state?: 'default' | 'error' | 'warning' | 'success' | 'perfect';
    theme?: 'filled' | 'outlined';
    disabled?: boolean;
    rootStyle?: FlexStyleProps;
    inputStyle?: InputStyleProps;
    amountStyle?: TextStyleProps;
    buttonStyle?: ButtonStyleProps;
    iconStyle?: IconStyleProps;
    min?: number;
    max?: number;
    step?: number;
    hasButton?: boolean;
    hasAmount?: boolean;
    onChange?: (value?: number) => void;
    formatType?: FormatType;
    currency?: string;
    locale?: string;
    maxLength?: number;
    precision?: number;
}
/**
 * A customizable number input component with support for increment/decrement buttons, theming, and validation.
 */
declare const ThemeNumberInput: ({ id, name, required, value, defaultValue, placeholder, size, color, state, theme, onChange, rootStyle, inputStyle, buttonStyle, iconStyle, amountStyle, disabled, min, max, step, maxLength, hasButton, hasAmount, formatType, currency, locale, precision, }: ThemeNumberInputProps) => import("react/jsx-runtime").JSX.Element;
export default ThemeNumberInput;
