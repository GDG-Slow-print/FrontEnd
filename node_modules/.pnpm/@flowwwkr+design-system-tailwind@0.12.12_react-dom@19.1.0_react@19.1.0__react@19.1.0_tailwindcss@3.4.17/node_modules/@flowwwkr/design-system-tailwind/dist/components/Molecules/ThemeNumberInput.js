"use client";
import { jsxs as V, jsx as h } from "react/jsx-runtime";
import { useState as qt, useEffect as Gt } from "react";
import Ht from "../Atoms/Input.js";
import v from "../Atoms/Flex.js";
import Jt from "../Atoms/Text.js";
import Ft from "../Atoms/Button.js";
import j from "../../utils/deepMerge.js";
import It from "../Icons/IconArrow.js";
const oo = ({
  id: Nt,
  name: Wt,
  required: Lt,
  value: x,
  defaultValue: M,
  placeholder: Vt,
  size: y = "md",
  color: F = "neutral",
  state: l = "default",
  theme: m = "outlined",
  onChange: n,
  rootStyle: vt,
  inputStyle: Mt,
  buttonStyle: X,
  iconStyle: Y,
  amountStyle: Xt,
  disabled: I,
  min: S,
  max: b,
  step: k = 1,
  maxLength: Yt = 1,
  hasButton: kt = !0,
  hasAmount: Rt = !1,
  formatType: d = "plain",
  currency: u = "$",
  locale: s = "en-US",
  precision: g
}) => {
  var E, P, U, q, G, H, J, K, Q, Z, _, T, z, C, tt, ot, rt, et, it, lt, nt, ct, dt, ut, st, ft, at, yt, St, pt, mt, bt, gt, wt, ht, jt, xt, Dt;
  const W = (r, t, o, e) => {
    const i = parseFloat(r.replace(/[^0-9]-/g, "")), c = r.endsWith(".") ? "." : "";
    let w = 0;
    const $t = r.indexOf(".");
    if ($t !== -1 && (w = r.length - $t - 1), isNaN(i)) return "";
    switch (t) {
      case "currency":
        return i < 0 ? `-${o}${Math.abs(i).toLocaleString(e, {
          minimumFractionDigits: 0,
          maximumFractionDigits: 20
        })}${c}` : `${o}${i.toLocaleString(e, {
          minimumFractionDigits: 0,
          maximumFractionDigits: 20
        })}${c}`;
      case "percent":
        return `${i + c}%`;
      default:
        return `${i.toLocaleString(e, {
          minimumFractionDigits: w,
          maximumFractionDigits: w
        })}${c}`;
    }
  }, D = (r, t, o, e, i) => {
    if (isNaN(r)) return "";
    let c = r;
    if (i != null && i >= 0) {
      const w = 10 ** i;
      c = Math.round(c * w) / w;
    }
    switch (t) {
      case "currency":
        return c < 0 ? `-${o}${Math.abs(c).toLocaleString(e, {
          minimumFractionDigits: 0,
          maximumFractionDigits: 20
        })}` : `${o}${c.toLocaleString(e, {
          minimumFractionDigits: 0,
          maximumFractionDigits: 20
        })}`;
      case "percent":
        return `${r}%`;
      default:
        return c.toString();
    }
  }, [$, f] = qt(() => x != null ? D(x, d, u, s, g) : M != null ? D(M, d, u, s, g) : "");
  Gt(() => {
    x !== void 0 && f(
      D(x, d, u, s, g)
    );
  }, [x, d, u, s, g]);
  const L = (r) => {
    const t = r.replace(/[^\d.-]/g, "");
    if (!t || t === "." || t === "-")
      return;
    const o = Number(t);
    return isNaN(o) ? void 0 : o;
  }, Bt = (r) => {
    const t = r.target.value.replace(/[^0-9.-]/g, "");
    if (t.split("-").length > 2 || t.includes("-") && !t.startsWith("-") || t.split(".").length > 2 || t === ".") return;
    if (t === "-") {
      f(t);
      return;
    }
    if (t.endsWith(".")) {
      const i = W(t, d, u, s);
      f(i), n == null || n(void 0);
      return;
    }
    if (t.includes(".") && t.endsWith("0")) {
      const i = W(t, d, u, s);
      f(i);
      return;
    }
    const e = L(t);
    if (e !== void 0) {
      if (S !== void 0 && e < S)
        return;
      if (b !== void 0 && e > b)
        return;
    }
    if (e != null) {
      const i = W(
        e.toString(),
        d,
        u,
        s
      );
      f(i), n == null || n(e);
    } else
      f(t), n == null || n(void 0);
  };
  function R(r, t) {
    const o = r.indexOf(".");
    if (o < 0)
      return t;
    const e = r.length - (o + 1);
    if (e <= 0)
      return t;
    const i = Math.pow(10, e);
    return Math.round(t * i) / i;
  }
  const Ot = () => {
    const r = L($);
    let o = (r ?? S ?? 0) + k;
    o = R($, o), b != null && o > b && (o = b);
    const e = D(o, d, u, s, g);
    f(e), n == null || n(o);
  }, At = () => {
    const r = L($);
    let o = (r ?? S ?? 0) - k;
    o = R($, o), S != null && o < S && (o = S);
    const e = D(o, d, u, s, g);
    f(e), n == null || n(o);
  }, p = {
    sm: {
      rootStyle: {
        width: "w-24",
        height: "h-2.75",
        paddingX: "px-1",
        paddingY: "py-0.5",
        gap: "g-1"
      },
      inputStyle: { font: "f-1.5" },
      buttonStyle: {
        width: "w-[14px]"
      },
      iconStyle: {}
    },
    md: {
      rootStyle: {
        width: "w-32",
        height: "h-4.25",
        paddingX: "px-1.5",
        paddingY: "py-1",
        gap: "g-1.5"
      },
      inputStyle: { font: "f-1.75" },
      buttonStyle: {
        width: "w-[16px]"
      },
      iconStyle: {}
    },
    lg: {
      rootStyle: {
        width: "w-40",
        height: "h-4.5",
        paddingX: "px-1.5",
        paddingY: "py-1",
        gap: "g-1.5"
      },
      inputStyle: { font: "f-2" },
      buttonStyle: {
        width: "w-[16px]"
      },
      iconStyle: {}
    }
  }, a = {
    error: {
      filled: {
        rootStyle: { color: "c-error-sf-01" },
        inputStyle: { color: "c-error-obj-01" },
        iconStyle: { color: "c-error-obj-01" }
      },
      outlined: {
        rootStyle: { borderColor: "bc-error-mid" },
        inputStyle: { color: "c-error-mid" },
        iconStyle: { color: "c-error-mid" }
      }
    },
    warning: {
      filled: {
        rootStyle: { color: "c-warning-sf-01" },
        inputStyle: { color: "c-warning-obj-01" },
        iconStyle: { color: "c-warning-obj-01" }
      },
      outlined: {
        rootStyle: { borderColor: "bc-warning-mid" },
        inputStyle: { color: "c-warning-mid" },
        iconStyle: { color: "c-warning-mid" }
      }
    },
    success: {
      filled: {
        rootStyle: { color: "c-success-sf-01" },
        inputStyle: { color: "c-success-obj-01" },
        iconStyle: { color: "c-success-obj-01" }
      },
      outlined: {
        rootStyle: { borderColor: "bc-success-mid" },
        inputStyle: { color: "c-success-mid" },
        iconStyle: { color: "c-success-mid" }
      }
    },
    perfect: {
      filled: {
        rootStyle: { color: "c-perfect-sf-01" },
        inputStyle: { color: "c-perfect-obj-01" },
        iconStyle: { color: "c-perfect-obj-01" }
      },
      outlined: {
        rootStyle: { borderColor: "bc-perfect-mid" },
        inputStyle: { color: "c-perfect-mid" },
        iconStyle: { color: "c-perfect-mid" }
      }
    }
  }, N = {
    primary: {
      filled: l === "default" ? {
        rootStyle: { color: "c-primary-sf-01" },
        inputStyle: { color: "c-primary-obj" },
        iconStyle: { color: "c-primary-obj-02" }
      } : (E = a[l]) == null ? void 0 : E.filled,
      outlined: l === "default" ? {
        rootStyle: { borderColor: "bc-primary-mid" },
        inputStyle: { color: "c-primary-obj" },
        iconStyle: { color: "c-primary-obj-02" }
      } : (P = a[l]) == null ? void 0 : P.outlined
    },
    secondary: {
      filled: l === "default" ? {
        rootStyle: { color: "c-secondary-sf-01" },
        inputStyle: { color: "c-secondary-obj" },
        iconStyle: { color: "c-secondary-obj" }
      } : (U = a[l]) == null ? void 0 : U.filled,
      outlined: l === "default" ? {
        rootStyle: { borderColor: "bc-secondary-mid" },
        inputStyle: { color: "c-secondary-obj" },
        iconStyle: { color: "c-secondary-obj" }
      } : (q = a[l]) == null ? void 0 : q.outlined
    },
    tertiary: {
      filled: l === "default" ? {
        rootStyle: { color: "c-tertiary-sf-01" },
        inputStyle: { color: "c-tertiary-obj" },
        iconStyle: { color: "c-tertiary-obj" }
      } : (G = a[l]) == null ? void 0 : G.filled,
      outlined: l === "default" ? {
        rootStyle: { borderColor: "bc-tertiary-mid" },
        inputStyle: { color: "c-tertiary-obj" },
        iconStyle: { color: "c-tertiary-obj-02" }
      } : (H = a[l]) == null ? void 0 : H.outlined
    },
    neutral: {
      filled: l === "default" ? {
        rootStyle: { color: "c-neutral-sf-01" },
        inputStyle: { color: "c-neutral-obj" },
        iconStyle: { color: "c-neutral-obj-02" }
      } : (J = a[l]) == null ? void 0 : J.filled,
      outlined: l === "default" ? {
        rootStyle: { borderColor: "bc-neutral-mid" },
        inputStyle: { color: "c-neutral-obj" },
        iconStyle: { color: "c-neutral-obj-02" }
      } : (K = a[l]) == null ? void 0 : K.outlined
    }
  }, B = {
    outlined: {
      rootStyle: {
        borderWidth: "bw-0.125",
        borderStyle: "bs-solid"
      }
    },
    filled: {}
  }, Et = v, Pt = {
    position: "relative",
    width: (Z = (Q = p[y]) == null ? void 0 : Q.rootStyle) == null ? void 0 : Z.width,
    height: (T = (_ = p[y]) == null ? void 0 : _.rootStyle) == null ? void 0 : T.height,
    paddingX: (C = (z = p[y]) == null ? void 0 : z.rootStyle) == null ? void 0 : C.paddingX,
    paddingY: (ot = (tt = p[y]) == null ? void 0 : tt.rootStyle) == null ? void 0 : ot.paddingY,
    gap: (et = (rt = p[y]) == null ? void 0 : rt.rootStyle) == null ? void 0 : et.gap,
    alignItems: "ai-center",
    alignContent: "ac-center",
    color: (nt = (lt = (it = N[F]) == null ? void 0 : it[m]) == null ? void 0 : lt.rootStyle) == null ? void 0 : nt.color,
    opacity: I ? "oc-0.5" : "oc-1",
    borderRadius: "rad-0.5",
    borderStyle: (dt = (ct = B[m]) == null ? void 0 : ct.rootStyle) == null ? void 0 : dt.borderStyle,
    borderWidth: (st = (ut = B[m]) == null ? void 0 : ut.rootStyle) == null ? void 0 : st.borderWidth,
    borderColor: (yt = (at = (ft = N[F]) == null ? void 0 : ft[m]) == null ? void 0 : at.rootStyle) == null ? void 0 : yt.borderColor
  }, Ut = {
    grow: "grow-1",
    minWidth: "mw-0",
    fontFamily: "ff-primary",
    font: (pt = (St = p[y]) == null ? void 0 : St.inputStyle) == null ? void 0 : pt.font,
    color: (gt = (bt = (mt = N[F]) == null ? void 0 : mt[m]) == null ? void 0 : bt.inputStyle) == null ? void 0 : gt.color
  }, O = {
    width: (ht = (wt = p[y]) == null ? void 0 : wt.buttonStyle) == null ? void 0 : ht.width
  }, A = {
    color: (Dt = (xt = (jt = N[F]) == null ? void 0 : jt[m]) == null ? void 0 : xt.iconStyle) == null ? void 0 : Dt.color,
    width: "w-full"
  };
  return /* @__PURE__ */ V(Et, { ...j(Pt, vt || {}), noDefaultStyle: !0, children: [
    /* @__PURE__ */ h(
      Ht,
      {
        id: Nt,
        type: "text",
        name: Wt,
        required: Lt,
        value: $,
        placeholder: Vt,
        onChange: Bt,
        ...j(Ut, Mt || {}),
        disabled: I,
        maxLength: Yt,
        noDefaultStyle: !0
      }
    ),
    Rt && /* @__PURE__ */ h(v, { shrink: "shrink-0", alignItems: "ai-center", children: /* @__PURE__ */ V(
      Jt,
      {
        color: "c-neutral-obj-03",
        font: "f-2",
        marginX: "mx-0.75",
        ...Xt,
        children: [
          "/ ",
          b
        ]
      }
    ) }),
    kt && /* @__PURE__ */ V(v, { direction: "flex-col", height: "h-full", wrap: "flex-nowrap", children: [
      /* @__PURE__ */ h(
        Ft,
        {
          padding: "p-0",
          marginBottom: "mb-[-2.3px]",
          onClick: Ot,
          ...j(O, X || {}),
          noDefaultStyle: !0,
          disabled: I,
          hover: !0,
          children: /* @__PURE__ */ h(
            It,
            {
              type: "up",
              ...j(A, Y || {}),
              noDefaultStyle: !0
            }
          )
        }
      ),
      /* @__PURE__ */ h(
        Ft,
        {
          padding: "p-0",
          marginTop: "mt-[-2.3px]",
          onClick: At,
          ...j(O, X || {}),
          noDefaultStyle: !0,
          disabled: I,
          hover: !0,
          children: /* @__PURE__ */ h(
            It,
            {
              type: "down",
              ...j(A, Y || {}),
              noDefaultStyle: !0
            }
          )
        }
      )
    ] })
  ] });
};
export {
  oo as default
};
