interface Params<T> {
    defaultOption?: T;
}
interface LabeledValue<T> {
    label: string;
    value: T;
}
type OptionType<T> = T | LabeledValue<T>;
declare const useSelect: <T extends object | string | number>({ defaultOption, }: Params<T>) => {
    selectedOption: OptionType<T> | undefined;
    setSelectedOption: import('react').Dispatch<import('react').SetStateAction<OptionType<T> | undefined>>;
    handleChangeSelect: (option: OptionType<T>) => void;
    resetSelect: () => void;
};
export default useSelect;
