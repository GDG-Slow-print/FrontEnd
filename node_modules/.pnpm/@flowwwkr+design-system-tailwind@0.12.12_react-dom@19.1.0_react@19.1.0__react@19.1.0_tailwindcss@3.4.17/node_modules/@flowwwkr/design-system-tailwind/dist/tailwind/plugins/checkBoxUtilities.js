import i from "tailwindcss/plugin";
const o = i(function({ addComponents: r }) {
  r({
    ".chk": {
      "& > label": {
        "& > input + div": {
          position: "relative",
          "& > .chk-bg": {
            width: "100%",
            height: "100%",
            borderStyle: "solid",
            "& + div": {
              display: "none"
            }
          }
        },
        "& > input:checked + div, & > input:indeterminate + div": {
          "& > .chk-bg": {
            "& + div": {
              display: "block"
            }
          }
        }
      }
    },
    ".chk-s > label > input + div": {
      width: "1.6rem",
      height: "1.6rem",
      "& > .chk-bg": {
        borderRadius: "0.1rem",
        borderWidth: "0.1rem"
      }
    },
    ".chk-m > label > input + div": {
      width: "2.4rem",
      height: "2.4rem",
      "& > .chk-bg": {
        borderRadius: "0.2rem",
        borderWidth: "0.2rem"
      }
    },
    ".chk-l > label > input + div": {
      width: "3.6rem",
      height: "3.6rem",
      "& > .chk-bg": {
        borderRadius: "0.3rem",
        borderWidth: "0.3rem"
      }
    },
    ".chk-neutral": {
      "& input + div": {
        "& > .chk-bg": {
          borderColor: "var(--neutral-surface-container-05)",
          backgroundColor: "var(--neutral-surface-container-02)",
          "& + div": {
            color: "var(--neutral-surface-container-02)"
          }
        }
      },
      "& input:checked + div, & input:indeterminate + div": {
        "& > .chk-bg": {
          borderColor: "var(--neutral-outline)",
          backgroundColor: "var(--neutral-surface-container-05)"
        }
      }
    },
    ".chk-primary": {
      "& input + div": {
        "& > .chk-bg": {
          borderColor: "var(--primary)",
          backgroundColor: "var(--on-primary)"
        },
        "& + div": {
          color: "var(--on-primary)"
        }
      },
      "& input:checked + div, & input:indeterminate + div": {
        "& > .chk-bg": {
          borderColor: "var(--on-primary-container)",
          backgroundColor: "var(--primary)"
        }
      }
    },
    ".chk-secondary": {
      "& input + div": {
        "& > .chk-bg": {
          borderColor: "var(--secondary)",
          backgroundColor: "var(--on-secondary)",
          "& + div": {
            color: "var(--on-secondary)"
          }
        }
      },
      "& input:checked + div, & input:indeterminate + div": {
        "& > .chk-bg": {
          borderColor: "var(--on-secondary-container)",
          backgroundColor: "var(--secondary)"
        }
      }
    },
    ".chk-tertiary": {
      "& input + div": {
        "& > .chk-bg": {
          borderColor: "var(--tertiary)",
          backgroundColor: "var(--on-tertiary)",
          "& + div": {
            color: "var(--on-tertiary)"
          }
        }
      },
      "& input:checked + div, & input:indeterminate + div": {
        "& > .chk-bg": {
          borderColor: "var(--on-tertiary-container)",
          backgroundColor: "var(--tertiary)"
        }
      }
    }
  });
});
export {
  o as checkBoxUtilities
};
