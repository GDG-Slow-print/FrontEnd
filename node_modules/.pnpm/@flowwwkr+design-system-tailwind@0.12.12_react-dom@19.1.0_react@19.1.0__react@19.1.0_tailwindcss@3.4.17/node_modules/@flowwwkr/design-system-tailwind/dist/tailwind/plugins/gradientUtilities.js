import u from "tailwindcss/plugin";
import { percentageTheme as b, opacityTheme as k } from "../themes/index.js";
import { hexToHsla as t, hslaToHex as y } from "../../utils/color-converter.js";
const L = u(function({ matchUtilities: w, theme: v }) {
  w(
    {
      fc: (o) => {
        let r = "#fff", a = "#000";
        if (typeof o == "string" && o.startsWith("#")) {
          const { h: g, s: p, l: $, a: S } = t(o), h = y(g, p, 100 - $, S);
          r = o, a = h;
        } else
          r = o.light.surface, a = o.dark.surface;
        const {
          h: f,
          s: i,
          l,
          a: e
        } = t(r), {
          h: d,
          s,
          l: n,
          a: c
        } = t(a);
        return {
          "--flowww-gradient-from-position": "0%",
          "--flowww-gradient-to-position": "100%",
          "--flowww-from-opacity": "100%",
          "--flowww-to-opacity": "0%",
          "--flowww-gradient-from": `hsla(${f}, ${i}%, ${l}%, calc(var(--flowww-from-opacity) * ${e})) var(--flowww-gradient-from-position)`,
          "--flowww-gradient-to": `hsla(${f}, ${i}%, ${l}%, calc(var(--flowww-from-opacity) * ${e})) var(--flowww-gradient-to-position)`,
          "--flowww-gradient-stops": "var(--flowww-gradient-from), var(--flowww-gradient-to)",
          '&:is([data-theme="dark"] *)': {
            "--flowww-gradient-from": `hsla(${d}, ${s}%, ${n}%, calc(var(--flowww-from-opacity) * ${c})) var(--flowww-gradient-from-position)`,
            "--flowww-gradient-to": `hsla(${d}, ${s}%, ${n}%, calc(var(--flowww-from-opacity) * ${c})) var(--flowww-gradient-to-position)`
          }
        };
      }
    },
    {
      values: v("colors")
    }
  ), w(
    {
      fp: (o) => ({
        "--flowww-gradient-from-position": o
      })
    },
    {
      values: b
    }
  ), w(
    {
      fo: (o) => ({
        "--flowww-from-opacity": o
      })
    },
    {
      values: k
    }
  ), w(
    {
      vc: (o) => {
        let r = "#fff", a = "#000";
        if (typeof o == "string" && o.startsWith("#")) {
          const { h: g, s: p, l: $, a: S } = t(o), h = y(g, p, 100 - $, S);
          r = o, a = h;
        } else
          r = o.light.surface, a = o.dark.surface;
        const {
          h: f,
          s: i,
          l,
          a: e
        } = t(r), {
          h: d,
          s,
          l: n,
          a: c
        } = t(a);
        return {
          "--flowww-gradient-via-position": "50%",
          "--flowww-via-opacity": "50%",
          "--flowww-gradient-to": `hsla(${f}, ${i}%, ${l}%, calc(var(--flowww-to-opacity) * ${e})) var(--flowww-gradient-to-position)`,
          "--flowww-gradient-stops": `var(--flowww-gradient-from), hsla(${f}, ${i}%, ${l}%, calc(var(--flowww-via-opacity) * ${e})) var(--flowww-gradient-via-position), var(--flowww-gradient-to)`,
          '&:is([data-theme="dark"] *)': {
            "--flowww-gradient-to": `hsla(${d}, ${s}%, ${n}%, calc(var(--flowww-to-opacity) * ${c})) var(--flowww-gradient-to-position)`,
            "--flowww-gradient-stops": `var(--flowww-gradient-from), hsla(${d}, ${s}%, ${n}%, calc(var(--flowww-via-opacity) * ${c})) var(--flowww-gradient-via-position), var(--flowww-gradient-to)`
          }
        };
      }
    },
    {
      values: v("colors")
    }
  ), w(
    {
      vp: (o) => ({
        "--flowww-gradient-via-position": o
      })
    },
    {
      values: b
    }
  ), w(
    {
      vo: (o) => ({
        "--flowww-via-opacity": o
      })
    },
    {
      values: k
    }
  ), w(
    {
      tc: (o) => {
        let r = "#fff", a = "#000";
        if (typeof o == "string" && o.startsWith("#")) {
          const { h: g, s: p, l: $, a: S } = t(o), h = y(g, p, 100 - $, S);
          r = o, a = h;
        } else
          r = o.light.surface, a = o.dark.surface;
        const {
          h: f,
          s: i,
          l,
          a: e
        } = t(r), {
          h: d,
          s,
          l: n,
          a: c
        } = t(a);
        return {
          "--flowww-gradient-to": `hsla(${f}, ${i}%, ${l}%, calc(var(--flowww-to-opacity) * ${e})) var(--flowww-gradient-to-position)`,
          '&:is([data-theme="dark"] *)': {
            "--flowww-gradient-to": `hsla(${d}, ${s}%, ${n}%, calc(var(--flowww-to-opacity) * ${c})) var(--flowww-gradient-to-position)`
          }
        };
      }
    },
    {
      values: v("colors")
    }
  ), w(
    {
      tp: (o) => ({
        "--flowww-gradient-to-position": o
      })
    },
    {
      values: b
    }
  ), w(
    {
      to: (o) => ({
        "--flowww-to-opacity": o
      })
    },
    {
      values: k
    }
  ), w(
    {
      "b-from-c": (o) => {
        let r = "#fff", a = "#000";
        if (typeof o == "string" && o.startsWith("#")) {
          const { h: g, s: p, l: $, a: S } = t(o), h = y(g, p, 100 - $, S);
          r = o, a = h;
        } else
          r = o.light.surface, a = o.dark.surface;
        const {
          h: f,
          s: i,
          l,
          a: e
        } = t(r), {
          h: d,
          s,
          l: n,
          a: c
        } = t(a);
        return {
          "--flowww-border-gradient-from-position": "0%",
          "--flowww-border-gradient-to-position": "100%",
          "--flowww-border-from-opacity": "100%",
          "--flowww-border-to-opacity": "0%",
          "--flowww-border-gradient-from": `hsla(${f}, ${i}%, ${l}%, calc(var(--flowww-border-from-opacity) * ${e})) var(--flowww-border-gradient-from-position)`,
          "--flowww-border-gradient-to": `hsla(${f}, ${i}%, ${l}%, calc(var(--flowww-border-to-opacity) * ${e})) var(--flowww-border-gradient-to-position)`,
          "--flowww-border-gradient-stops": "var(--flowww-border-gradient-from), var(--flowww-border-gradient-to)",
          '&:is([data-theme="dark"] *)': {
            "--flowww-border-gradient-from": `hsla(${d}, ${s}%, ${n}%, calc(var(--flowww-border-from-opacity) * ${c})) var(--flowww-border-gradient-from-position)`,
            "--flowww-border-gradient-to": `hsla(${d}, ${s}%, ${n}%, calc(var(--flowww-border-to-opacity) * ${c})) var(--flowww-border-gradient-to-position)`
          }
        };
      }
    },
    {
      values: v("colors")
    }
  ), w(
    {
      "b-from-p": (o) => ({
        "--flowww-border-gradient-via-position": o
      })
    },
    {
      values: b
    }
  ), w(
    {
      "b-from-o": (o) => ({
        "--flowww-border-from-opacity": o
      })
    },
    {
      values: k
    }
  ), w(
    {
      "b-via-c": (o) => {
        let r = "#fff", a = "#000";
        if (typeof o == "string" && o.startsWith("#")) {
          const { h: g, s: p, l: $, a: S } = t(o), h = y(g, p, 100 - $, S);
          r = o, a = h;
        } else
          r = o.light.surface, a = o.dark.surface;
        const {
          h: f,
          s: i,
          l,
          a: e
        } = t(r), {
          h: d,
          s,
          l: n,
          a: c
        } = t(a);
        return {
          "--flowww-border-gradient-via-position": "50%",
          "--flowww-border-via-opacity": "50%",
          "--flowww-border-gradient-to": `hsla(${f}, ${i}%, ${l}%, calc(var(--flowww-border-to-opacity) * ${e} )) var(--flowww-border-gradient-to-position)`,
          "--flowww-border-gradient-stops": `var(--flowww-gradient-from), hsla(${f}, ${i}%, ${l}%, calc(var(--flowww-border-via-opacity) * ${e})) var(--flowww-border-gradient-via-position), var(--flowww-gradient-to)`,
          '&:is([data-theme="dark"] *)': {
            "--flowww-border-gradient-to": `hsla(${d}, ${s}%, ${n}%, calc(var(--flowww-border-to-opacity) * ${c})) var(--flowww-border-gradient-to-position)`,
            "--flowww-border-gradient-stops": `var(--flowww-gradient-from), hsla(${d}, ${s}%, ${n}%, calc(var(--flowww-border-via-opacity) * ${c})) var(--flowww-border-gradient-via-position), var(--flowww-gradient-to)`
          }
        };
      }
    },
    {
      values: v("colors")
    }
  ), w(
    {
      "b-via-p": (o) => ({
        "--flowww-border-gradient-via-position": o
      })
    },
    {
      values: b
    }
  ), w(
    {
      "b-via-o": (o) => ({
        "--flowww-border-via-opacity": o
      })
    },
    {
      values: k
    }
  ), w(
    {
      "b-to-c": (o) => {
        let r = "#fff", a = "#000";
        if (typeof o == "string" && o.startsWith("#")) {
          const { h: g, s: p, l: $, a: S } = t(o), h = y(g, p, 100 - $, S);
          r = o, a = h;
        } else
          r = o.light.surface, a = o.dark.surface;
        const {
          h: f,
          s: i,
          l,
          a: e
        } = t(r), {
          h: d,
          s,
          l: n,
          a: c
        } = t(a);
        return {
          "--flowww-border-gradient-to": `hsla(${f}, ${i}%, ${l}%, calc(var(--flowww-border-to-opacity) * ${e})) var(--flowww-border-gradient-to-position)`,
          '&:is([data-theme="dark"] *)': {
            "--flowww-border-gradient-to": `hsla(${d}, ${s}%, ${n}%, calc(var(--flowww-border-to-opacity) * ${c})) var(--flowww-border-gradient-to-position)`
          }
        };
      }
    },
    {
      values: v("colors")
    }
  ), w(
    {
      "b-to-p": (o) => ({
        "--flowww-border-gradient-to-position": o
      })
    },
    {
      values: b
    }
  ), w(
    {
      "b-to-o": (o) => ({
        "--flowww-border-to-opacity": o
      })
    },
    {
      values: k
    }
  );
});
export {
  L as gradientUtilities
};
