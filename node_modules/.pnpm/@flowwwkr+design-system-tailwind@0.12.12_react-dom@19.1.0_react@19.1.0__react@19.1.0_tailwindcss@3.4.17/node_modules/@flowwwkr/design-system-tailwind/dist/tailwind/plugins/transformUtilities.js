import { scaleTheme as r, degreeTheme as e, positioningTheme as s } from "../themes/index.js";
import w from "tailwindcss/plugin";
const n = w(function({ matchUtilities: t }) {
  t(
    {
      scl: (a) => ({
        "--tw-scale-x": a,
        "--tw-scale-y": a,
        transform: "translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))"
      }),
      sclx: (a) => ({
        "--tw-scale-x": a,
        transform: "translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))"
      }),
      scly: (a) => ({
        "--tw-scale-y": a,
        transform: "translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))"
      })
    },
    { values: r }
  ), t(
    {
      rot: (a) => ({
        "--tw-rotate": a,
        transform: "translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))"
      })
    },
    { values: e, supportsNegativeValues: !0 }
  ), t(
    {
      trl: (a) => ({
        "--tw-translate-x": a,
        "--tw-translate-y": a,
        transform: "translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))"
      }),
      trlx: (a) => ({
        "--tw-translate-x": a,
        transform: "translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))"
      }),
      trly: (a) => ({
        "--tw-translate-y": a,
        transform: "translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))"
      })
    },
    {
      values: s,
      supportsNegativeValues: !0
    }
  ), t(
    {
      skw: (a) => ({
        "--tw-skew-x": a,
        "--tw-skew-y": a,
        transform: "translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))"
      }),
      skwx: (a) => ({
        "--tw-skew-x": a,
        transform: "translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))"
      }),
      skwy: (a) => ({
        "--tw-skew-y": a,
        transform: "translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))"
      })
    },
    { values: e, supportsNegativeValues: !0 }
  );
});
export {
  n as transformUtilities
};
