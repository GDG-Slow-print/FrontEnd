export type Factor = '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | `[${string}]`;
export type Order = Factor | 'first' | 'last' | 'none';
export type Spacing = 'auto' | '0' | '0.125' | '0.25' | '0.375' | '0.5' | '0.75' | '1' | '1.25' | '1.5' | '1.75' | '2' | '2.25' | '2.5' | '2.75' | '3' | '3.25' | '3.5' | '3.75' | '4' | '4.25' | '4.5' | '4.75' | '5' | '5.5' | '6' | '6.5' | '7' | '7.5' | '8' | '8.5' | '9' | '9.5' | '10' | '11' | '12' | '13' | '14' | '15' | '16' | '18' | '20' | '22' | '24' | '26' | '28' | '30' | '32' | '36' | '40' | '44' | '48' | '52' | '56' | '60' | '64' | '72' | '80' | '88' | '96' | '104' | '112' | '120' | '128' | `[${string}]`;
export type NagativeSpacing = '-0' | '-0.125' | '-0.25' | '-0.375' | '-0.5' | '-0.75' | '-1' | '-1.25' | '-1.5' | '-1.75' | '-2' | '-2.25' | '-2.5' | '-2.75' | '-3' | '-3.25' | '-3.5' | '-3.75' | '-4' | '-4.25' | '-4.5' | '-4.75' | '-5' | '-5.5' | '-6' | '-6.5' | '-7' | '-7.5' | '-8' | '-8.5' | '-9' | '-9.5' | '-10' | '-11' | '-12' | '-13' | '-14' | '-15' | '-16' | '-18' | '-20' | '-22' | '-24' | '-26' | '-28' | '-30' | '-32' | '-36' | '-40' | '-44' | '-48' | '-52' | '-56' | '-60' | '-64' | '-72' | '-80' | '-88' | '-96' | '-104' | '-112' | '-120';
export type Percentage = '0%' | '1%' | '2%' | '3%' | '4%' | '5%' | '6%' | '7%' | '8%' | '9%' | '10%' | '11%' | '12%' | '13%' | '14%' | '15%' | '16%' | '18%' | '20%' | '22%' | '24%' | '26%' | '28%' | '30%' | '32%' | '34%' | '36%' | '38%' | '40%' | '42%' | '44%' | '46%' | '48%' | '50%' | '52%' | '54%' | '56%' | '58%' | '60%' | '62%' | '64%' | '66%' | '68%' | '70%' | '72%' | '74%' | '76%' | '78%' | '80%' | '82%' | '84%' | '86%' | '88%' | '90%' | '92%' | '94%' | '96%' | '98%' | '100%' | '102%' | '104%' | '106%' | '108%' | '110%' | '112%' | '114%' | '116%' | '118%' | '120%' | '122%' | '124%' | '126%' | '128%' | '130%' | '132%' | '134%' | '136%' | '138%' | '140%' | '142%' | '144%' | '146%' | '148%' | '150%' | '152%' | '154%' | '156%' | '158%' | '160%' | '162%' | '164%' | '166%' | '168%' | '170%' | '172%' | '174%' | '176%' | '178%' | '180%' | '182%' | '184%' | '186%' | '188%' | '190%' | '192%' | '194%' | '196%' | '198%' | '200%' | `[${string}]`;
export type NagativePercentage = '-0%' | '-1%' | '-2%' | '-3%' | '-4%' | '-5%' | '-6%' | '-7%' | '-8%' | '-9%' | '-10%' | '-12%' | '-14%' | '-16%' | '-18%' | '-20%' | '-22%' | '-24%' | '-26%' | '-28%' | '-30%' | '-32%' | '-34%' | '-36%' | '-38%' | '-40%' | '-42%' | '-44%' | '-46%' | '-48%' | '-50%' | '-52%' | '-54%' | '-56%' | '-58%' | '-60%' | '-62%' | '-64%' | '-66%' | '-68%' | '-70%' | '-72%' | '-74%' | '-76%' | '-78%' | '-80%' | '-82%' | '-84%' | '-86%' | '-88%' | '-90%' | '-92%' | '-94%' | '-96%' | '-98%' | '-100%';
export type Sizing = Spacing | Percentage | 'xs-mobile' | 'small-mobile' | 'mobile' | 'tablet' | 'laptop' | 'desktop' | 'large-desktop' | 'xl-desktop' | 'full' | 'screen' | 'min-content' | 'max-content' | 'fit-content' | 'initial' | 'unset' | 'inherit' | `[${string}]`;
export type Positioning = Spacing | Percentage;
export type Gap = Spacing | Percentage;
export type ZIndex = '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12' | '13' | '14' | '15' | '16' | '17' | '18' | '19' | '100' | '101' | '102' | '103' | '104' | '105' | '106' | '107' | '108' | '109' | '1001' | '1002' | '1003' | '1004' | '1005' | '1006' | '1007' | '1008' | '1009' | '1010' | '1101' | '1102' | '1103' | '1104' | '1105' | '1106' | '1107' | '1108' | '1109' | '1110' | `[${string}]`;
export type Color = 'primary-sf' | 'primary-sf-00' | 'primary-sf-01' | 'primary-sf-02' | 'primary-sf-03' | 'primary-sf-04' | 'primary-obj' | 'primary-obj-01' | 'primary-obj-02' | 'primary-obj-03' | 'primary-obj-04' | 'primary-mid' | 'secondary-sf' | 'secondary-sf-00' | 'secondary-sf-01' | 'secondary-sf-02' | 'secondary-sf-03' | 'secondary-sf-04' | 'secondary-obj' | 'secondary-obj-01' | 'secondary-obj-02' | 'secondary-obj-03' | 'secondary-obj-04' | 'secondary-mid' | 'tertiary-sf' | 'tertiary-sf-00' | 'tertiary-sf-01' | 'tertiary-sf-02' | 'tertiary-sf-03' | 'tertiary-sf-04' | 'tertiary-obj' | 'tertiary-obj-01' | 'tertiary-obj-02' | 'tertiary-obj-03' | 'tertiary-obj-04' | 'tertiary-mid' | 'neutral-sf' | 'neutral-sf-00' | 'neutral-sf-01' | 'neutral-sf-02' | 'neutral-sf-03' | 'neutral-sf-04' | 'neutral-obj' | 'neutral-obj-00' | 'neutral-obj-01' | 'neutral-obj-02' | 'neutral-obj-03' | 'neutral-obj-04' | 'neutral-mid' | 'error-sf' | 'error-sf-00' | 'error-sf-01' | 'error-sf-02' | 'error-sf-03' | 'error-sf-04' | 'error-obj' | 'error-obj-01' | 'error-obj-02' | 'error-obj-03' | 'error-obj-04' | 'error-mid' | 'warning-sf' | 'warning-sf-00' | 'warning-sf-01' | 'warning-sf-02' | 'warning-sf-03' | 'warning-sf-04' | 'warning-obj' | 'warning-obj-01' | 'warning-obj-02' | 'warning-obj-03' | 'warning-obj-04' | 'warning-mid' | 'success-sf' | 'success-sf-00' | 'success-sf-01' | 'success-sf-02' | 'success-sf-03' | 'success-sf-04' | 'success-obj' | 'success-obj-01' | 'success-obj-02' | 'success-obj-03' | 'success-obj-04' | 'success-mid' | 'perfect-sf' | 'perfect-sf-00' | 'perfect-sf-01' | 'perfect-sf-02' | 'perfect-sf-03' | 'perfect-sf-04' | 'perfect-obj' | 'perfect-obj-01' | 'perfect-obj-02' | 'perfect-obj-03' | 'perfect-obj-04' | 'perfect-mid' | 'alert-sf' | 'alert-sf-00' | 'alert-sf-01' | 'alert-sf-02' | 'alert-sf-03' | 'alert-sf-04' | 'alert-obj' | 'alert-obj-01' | 'alert-obj-02' | 'alert-obj-03' | 'alert-obj-04' | 'alert-mid' | 'red-50' | 'red-100' | 'red-200' | 'red-300' | 'red-400' | 'red-500' | 'red-600' | 'red-700' | 'red-800' | 'red-900' | 'red-950' | 'orange-50' | 'orange-100' | 'orange-200' | 'orange-300' | 'orange-400' | 'orange-500' | 'orange-600' | 'orange-700' | 'orange-800' | 'orange-900' | 'orange-950' | 'gold-50' | 'gold-100' | 'gold-200' | 'gold-300' | 'gold-400' | 'gold-500' | 'gold-600' | 'gold-700' | 'gold-800' | 'gold-900' | 'gold-950' | 'yellow-50' | 'yellow-100' | 'yellow-200' | 'yellow-300' | 'yellow-400' | 'yellow-500' | 'yellow-600' | 'yellow-700' | 'yellow-800' | 'yellow-900' | 'yellow-950' | 'lime-50' | 'lime-100' | 'lime-200' | 'lime-300' | 'lime-400' | 'lime-500' | 'lime-600' | 'lime-700' | 'lime-800' | 'lime-900' | 'lime-950' | 'green-50' | 'green-100' | 'green-200' | 'green-300' | 'green-400' | 'green-500' | 'green-600' | 'green-700' | 'green-800' | 'green-900' | 'green-950' | 'emerald-50' | 'emerald-100' | 'emerald-200' | 'emerald-300' | 'emerald-400' | 'emerald-500' | 'emerald-600' | 'emerald-700' | 'emerald-800' | 'emerald-900' | 'emerald-950' | 'turquoise-50' | 'turquoise-100' | 'turquoise-200' | 'turquoise-300' | 'turquoise-400' | 'turquoise-500' | 'turquoise-600' | 'turquoise-700' | 'turquoise-800' | 'turquoise-900' | 'turquoise-950' | 'azure-50' | 'azure-100' | 'azure-200' | 'azure-300' | 'azure-400' | 'azure-500' | 'azure-600' | 'azure-700' | 'azure-800' | 'azure-900' | 'azure-950' | 'blue-ribbon-50' | 'blue-ribbon-100' | 'blue-ribbon-200' | 'blue-ribbon-300' | 'blue-ribbon-400' | 'blue-ribbon-500' | 'blue-ribbon-600' | 'blue-ribbon-700' | 'blue-ribbon-800' | 'blue-ribbon-900' | 'blue-ribbon-950' | 'royal-blue-50' | 'royal-blue-100' | 'royal-blue-200' | 'royal-blue-300' | 'royal-blue-400' | 'royal-blue-500' | 'royal-blue-600' | 'royal-blue-700' | 'royal-blue-800' | 'royal-blue-900' | 'royal-blue-950' | 'purple-50' | 'purple-100' | 'purple-200' | 'purple-300' | 'purple-400' | 'purple-500' | 'purple-600' | 'purple-700' | 'purple-800' | 'purple-900' | 'purple-950' | 'violet-50' | 'violet-100' | 'violet-200' | 'violet-300' | 'violet-400' | 'violet-500' | 'violet-600' | 'violet-700' | 'violet-800' | 'violet-900' | 'violet-950' | 'fuchsia-50' | 'fuchsia-100' | 'fuchsia-200' | 'fuchsia-300' | 'fuchsia-400' | 'fuchsia-500' | 'fuchsia-600' | 'fuchsia-700' | 'fuchsia-800' | 'fuchsia-900' | 'fuchsia-950' | 'rose-50' | 'rose-100' | 'rose-200' | 'rose-300' | 'rose-400' | 'rose-500' | 'rose-600' | 'rose-700' | 'rose-800' | 'rose-900' | 'rose-950' | 'gs-cool-50' | 'gs-cool-100' | 'gs-cool-200' | 'gs-cool-300' | 'gs-cool-400' | 'gs-cool-500' | 'gs-cool-600' | 'gs-cool-700' | 'gs-cool-800' | 'gs-cool-900' | 'gs-cool-950' | 'gs-forest-50' | 'gs-forest-100' | 'gs-forest-200' | 'gs-forest-300' | 'gs-forest-400' | 'gs-forest-500' | 'gs-forest-600' | 'gs-forest-700' | 'gs-forest-800' | 'gs-forest-900' | 'gs-forest-950' | 'gs-green-50' | 'gs-green-100' | 'gs-green-200' | 'gs-green-300' | 'gs-green-400' | 'gs-green-500' | 'gs-green-600' | 'gs-green-700' | 'gs-green-800' | 'gs-green-900' | 'gs-green-950' | 'gs-pure-50' | 'gs-pure-100' | 'gs-pure-200' | 'gs-pure-300' | 'gs-pure-400' | 'gs-pure-500' | 'gs-pure-600' | 'gs-pure-700' | 'gs-pure-800' | 'gs-pure-900' | 'gs-pure-950' | 'gs-pure-black' | 'gs-pure-white' | 'gs-soil-50' | 'gs-soil-100' | 'gs-soil-200' | 'gs-soil-300' | 'gs-soil-400' | 'gs-soil-500' | 'gs-soil-600' | 'gs-soil-700' | 'gs-soil-800' | 'gs-soil-900' | 'gs-soil-950' | 'gs-violet-50' | 'gs-violet-100' | 'gs-violet-200' | 'gs-violet-300' | 'gs-violet-400' | 'gs-violet-500' | 'gs-violet-600' | 'gs-violet-700' | 'gs-violet-800' | 'gs-violet-900' | 'gs-violet-950' | 'gs-warm-50' | 'gs-warm-100' | 'gs-warm-200' | 'gs-warm-300' | 'gs-warm-400' | 'gs-warm-500' | 'gs-warm-600' | 'gs-warm-700' | 'gs-warm-800' | 'gs-warm-900' | 'gs-warm-950' | 'gs-wood-50' | 'gs-wood-100' | 'gs-wood-200' | 'gs-wood-300' | 'gs-wood-400' | 'gs-wood-500' | 'gs-wood-600' | 'gs-wood-700' | 'gs-wood-800' | 'gs-wood-900' | 'gs-wood-950' | 'inherit' | 'transparent' | `[${string}]`;
type GradientColor = Exclude<Color, 'transparent' | 'inherit'>;
export type BorderType = 'none' | 'hidden' | 'solid' | 'dashed' | 'dotted' | 'double' | 'groove' | 'ridge';
export type BorderWidth = '0' | '0.125' | '0.25' | '0.375' | '0.5' | '0.75' | '1' | `[${string}]`;
export type BorderRadius = '0' | '0.25' | '0.5' | '0.75' | '1' | '1.5' | '2' | '2.5' | '3' | '9999' | 'circle' | `[${string}]`;
export type Opacity = '0' | '0.1' | '0.2' | '0.25' | '0.3' | '0.33' | '0.4' | '0.5' | '0.6' | '0.67' | '0.7' | '0.75' | '0.8' | '0.9' | '1' | `[${string}]`;
export type Duration = '0' | '75' | '100' | '150' | '200' | '300' | '500' | '700' | '1000' | `[${string}]`;
export type Scale = '0' | '25' | '50' | '75' | '90' | '95' | '100' | '105' | '110' | '125' | '150' | `[${string}]`;
export type Degree = '0' | '1' | '2' | '3' | '6' | '12' | '15' | '30' | '45' | '60' | '75' | '90' | '105' | '120' | '135' | '150' | '165' | '180' | `[${string}]`;
export type Font = 'suit' | 'pretendard' | 'noto-sans-kr' | 'freesentation' | 'primary' | 'secondary' | 'tertiary' | 'inherit';
export type FontSize = '0.75' | '1' | '1.25' | '1.5' | '1.75' | '2' | '2.25' | '2.5' | '2.75' | '3' | '3.25' | '3.5' | '3.75' | '4' | '4.5' | '5' | '5.5' | '6' | '6.5' | '7' | '7.5' | '8' | '9' | '10' | '11' | '12' | '13' | '14' | '15' | '16' | '18' | '20' | '22' | '24' | '26' | '28' | '30' | '32' | 'inherit' | `[${string}]`;
export type LetterSpacing = '0%' | '2%' | '4%' | '6%' | '8%' | '10%' | '12%' | '14%' | '16%' | '18%' | '20%' | `[${string}]`;
export type LineHeight = '90%' | '100%' | '110%' | '120%' | '130%' | '140%' | '150%' | '160%' | '170%' | '180%' | '190%' | '200%' | `[${string}]`;
export type LineClamp = 'none' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | `[${string}]`;
export type AspectRatio = '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12' | '13' | '14' | '15' | '16';
export type Anchor = 't' | 'tr' | 'r' | 'br' | 'b' | 'bl' | 'l' | 'tl';
type GridTrackCount = '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12' | '13' | '14' | '15' | '16' | `[${string}]`;
export type GridTemplateTrack = GridTrackCount | 'none' | 'subgrid' | 'auto-fill' | 'auto-fit';
export type GridTrackMinMax = Spacing | Percentage | 'auto' | 'min-content' | 'max-content' | 'fr';
export type GridSpan = GridTrackCount | 'full' | 'auto';
export type GridLine = 'auto' | GridTrackCount | '17';
export interface Responsive {
    xsMobile?: 'xs';
    smallMobile?: 'sb';
    mobile?: 'mb';
    tablet?: 'tb';
    laptop?: 'lt';
    desktop?: 'dt';
    largeDesktop?: 'ld';
    xlDesktop?: 'xd';
    landscape?: 'ls';
    portrait?: 'pt';
}
export interface Theme {
    dark?: 'dark';
}
export interface PseudoClass {
    hoverStyle?: 'hover';
    focusStyle?: 'focus';
    activeStyle?: 'active';
    checkedStyle?: 'checked';
    disabledStyle?: 'disabled';
    requiredStyle?: 'required';
    invalidStyle?: 'invalid';
    firstStyle?: 'first';
    lastStyle?: 'last';
    oddStyle?: 'odd';
    evenStyle?: 'even';
}
export interface PseudoElement {
    placeholderStyle?: 'placeholder';
    selectionStyle?: 'selection';
}
export interface PseudoState extends PseudoClass, PseudoElement {
}
export interface DisplayStyle {
    display?: 'block' | 'inline' | 'inline-block' | 'flex' | 'inline-flex' | 'grid' | 'hidden';
}
export interface ContentColorStyle {
    color?: `c-${Color}` | `lg-${Anchor | `[${number}deg]`}`;
    colorOpacity?: `co-${Opacity}`;
}
export interface ContainerColorStyle {
    color?: `c-${Color}` | `lg-${Anchor | `[${number}deg]`}`;
    colorOpacity?: `co-${Opacity}`;
}
export interface PositionStyle {
    position?: 'static' | 'absolute' | 'relative' | 'fixed' | 'sticky';
    top?: `t-${Positioning}` | `-t-${Positioning}`;
    left?: `l-${Positioning}` | `-l-${Positioning}`;
    bottom?: `b-${Positioning}` | `-b-${Positioning}`;
    right?: `r-${Positioning}` | `-r-${Positioning}`;
    zIndex?: `z-${ZIndex}` | `-z-${ZIndex}`;
}
export interface OpacityStyle {
    opacity?: `oc-${Opacity}`;
}
export interface PaddingStyle {
    padding?: `p-${Spacing}`;
    paddingX?: `px-${Spacing}`;
    paddingY?: `py-${Spacing}`;
    paddingTop?: `pt-${Spacing}`;
    paddingBottom?: `pb-${Spacing}`;
    paddingLeft?: `pl-${Spacing}`;
    paddingRight?: `pr-${Spacing}`;
}
export interface MarginStyle {
    margin?: `m-${Spacing}` | `-m-${Spacing}`;
    marginX?: `mx-${Spacing}` | `-mx-${Spacing}`;
    marginY?: `my-${Spacing}` | `-my-${Spacing}`;
    marginTop?: `mt-${Spacing}` | `-mt-${Spacing}`;
    marginBottom?: `mb-${Spacing}` | `-mb-${Spacing}`;
    marginLeft?: `ml-${Spacing}` | `-ml-${Spacing}`;
    marginRight?: `mr-${Spacing}` | `-mr-${Spacing}`;
}
export interface BorderStyle {
    borderStyle?: `bs-${BorderType}`;
    borderTopStyle?: `bts-${BorderType}`;
    borderBottomStyle?: `bbs-${BorderType}`;
    borderLeftStyle?: `bls-${BorderType}`;
    borderRightStyle?: `brs-${BorderType}`;
    borderColor?: `bc-${Color}` | `blg-${Anchor | `[${number}deg]`}`;
    borderFromPosition?: `b-from-p-${Percentage}`;
    borderFromColor?: `b-from-c-${GradientColor}`;
    borderFromOpacity?: `b-from-o-${Opacity}`;
    borderViaPosition?: `b-via-p-${Percentage}`;
    borderViaColor?: `b-via-c-${GradientColor}`;
    borderViaOpacity?: `b-via-o-${Opacity}`;
    borderToPosition?: `b-to-p-${Percentage}`;
    borderToColor?: `b-to-c-${GradientColor}`;
    borderToOpacity?: `b-to-o-${Opacity}`;
    borderTopColor?: `btc-${Color}`;
    borderBottomColor?: `bbc-${Color}`;
    borderLeftColor?: `blc-${Color}`;
    borderRightColor?: `brc-${Color}`;
    borderOpacity?: `bo-${Opacity}`;
    borderTopOpacity?: `bto-${Opacity}`;
    borderBottomOpacity?: `bbo-${Opacity}`;
    borderLeftOpacity?: `blo-${Opacity}`;
    borderRightOpacity?: `bro-${Opacity}`;
    borderWidth?: `bw-${BorderWidth}`;
    borderTopWidth?: `btw-${BorderWidth}`;
    borderBottomWidth?: `bbw-${BorderWidth}`;
    borderLeftWidth?: `blw-${BorderWidth}`;
    borderRightWidth?: `brw-${BorderWidth}`;
    borderRadius?: `rad-${BorderRadius}`;
    borderRadiusTop?: `rad-t-${BorderRadius}`;
    borderRadiusBottom?: `rad-b-${BorderRadius}`;
    borderRadiusLeft?: `rad-l-${BorderRadius}`;
    borderRadiusRight?: `rad-r-${BorderRadius}`;
    borderRadiusTopLeft?: `rad-tl-${BorderRadius}`;
    borderRadiusTopRight?: `rad-tr-${BorderRadius}`;
    borderRadiusBottomLeft?: `rad-bl-${BorderRadius}`;
    borderRadiusBottomRight?: `rad-br-${BorderRadius}`;
}
export interface ShadowStyle {
    shadow?: 'shd-gray';
}
export interface SizeStyle {
    size?: `sz-${Sizing}`;
    /** width */
    width?: `w-${Sizing}`;
    height?: `h-${Sizing}`;
    maxWidth?: `xw-${Sizing}`;
    maxHeight?: `xh-${Sizing}`;
    minWidth?: `mw-${Sizing}`;
    minHeight?: `mh-${Sizing}`;
}
export interface FlexGridItemStyle {
    /** flex */
    grow?: `grow-${Factor}`;
    shrink?: `shrink-${Factor}`;
    basis?: `basis-${Positioning}`;
    order?: `order-${Factor}`;
    alignSelf?: 'as-start' | 'as-end' | 'as-center' | 'as-baseline' | 'as-stretch' | 'as-auto';
    /** grid */
    gridColumnSpan?: `gc-${GridSpan}`;
    gridColumnStart?: `gcs-${GridLine}`;
    gridColumnEnd?: `gce-${GridLine}`;
    gridRowSpan?: `gr-${GridSpan}`;
    gridRowStart?: `grs-${GridLine}`;
    gridRowEnd?: `gre-${GridLine}`;
    justifySelf?: 'js-start' | 'js-end' | 'js-center' | 'js-stretch' | 'js-auto';
    placeSelf?: 'ps-start' | 'ps-end' | 'ps-center' | 'ps-stretch';
}
export interface ObjectStyle {
    objectFit?: 'obj-cover' | 'obj-contain' | 'obj-fill' | 'obj-none' | 'obj-scale-down';
    objectPosition?: 'obj-top' | 'obj-right' | 'obj-bottom' | 'obj-left' | 'obj-center' | 'obj-left-top' | 'obj-right-top' | 'obj-right-bottom' | 'obj-left-bottom';
}
export interface VisibilityStyle {
    visibility?: 'visible' | 'hidden' | 'collapse';
}
export interface OverflowStyle {
    overflow?: 'ovf-auto' | 'ovf-hidden' | 'ovf-visible' | 'ovf-scroll' | 'ovf-clip';
    overflowX?: 'ovf-x-auto' | 'ovf-x-hidden' | 'ovf-x-visible' | 'ovf-x-scroll' | 'ovf-x-clip';
    overflowY?: 'ovf-y-auto' | 'ovf-y-hidden' | 'ovf-y-visible' | 'ovf-y-scroll' | 'ovf-y-clip';
}
export interface TransitionStyle {
    transition?: 'trans' | 'trans-all' | 'trans-none' | 'trans-colors' | 'trans-shadow' | 'trans-transform' | 'trans-opacity';
    transitionDuration?: `dur-${Duration}`;
    transitionTimingFunction?: 'ease-in' | 'ease-out' | 'ease-in-out' | 'ease-linear';
    transitionDelay?: `dly-${Duration}`;
}
export interface TransformStyle {
    transformRotate?: `rot-${Degree}` | `-rot-${Degree}`;
    transformScale?: `scl-${Scale}`;
    transformScaleX?: `sclx-${Scale}`;
    transformScaleY?: `scly-${Scale}`;
    transformTranslate?: `trl-${Positioning}` | `-trl-${Positioning}`;
    transformTranslateX?: `trlx-${Positioning}` | `-trlx-${Positioning}`;
    transformTranslateY?: `trly-${Positioning}` | `-trly-${Positioning}`;
    transformSkew?: `skw-${Degree}` | `-skw-${Degree}`;
    transformSkewX?: `skwx-${Degree}` | `-skwx-${Degree}`;
    transformSkewY?: `skwy-${Degree}` | `-skwy-${Degree}`;
    transformOrigin?: `origin-center` | `origin-top` | `origin-top-right` | `origin-right` | `origin-bottom-right` | `origin-bottom` | `origin-bottom-left` | `origin-left` | `origin-top-left`;
}
export interface InteractivityStyle {
    userSelect?: 'us-none' | 'us-text' | 'us-all' | 'us-auto';
    pointerEvents?: 'pe-none' | 'pe-auto';
    overscroll?: 'os-contain' | 'os-none' | 'os-auto';
    cursor?: 'cs-auto' | 'cs-default' | 'cs-pointer' | 'cs-wait' | 'cs-text' | 'cs-move' | 'cs-not-allowed' | 'cs-help' | 'cs-none' | 'cs-progress' | 'cs-alias' | 'cs-context-menu' | 'cs-cell' | 'cs-vertical-text' | 'cs-copy' | 'cs-crosshair' | 'cs-no-drop' | 'cs-grab' | 'cs-grabbing' | 'cs-all-scroll' | 'cs-n-resize' | 'cs-ne-resize' | 'cs-e-resize' | 'cs-se-resize' | 'cs-s-resize' | 'cs-sw-resize' | 'cs-w-resize' | 'cs-nw-resize' | 'cs-ew-resize' | 'cs-ns-resize' | 'cs-nesw-resize' | 'cs-nwse-resize' | 'cs-col-resize' | 'cs-row-resize' | 'cs-zoom-in' | 'cs-zoom-out';
}
export interface ScrollItemStyle {
    scrollMargin?: `scr-m-${Spacing}`;
    scrollMarginX?: `scr-mx-${Spacing}`;
    scrollMarginY?: `scr-my-${Spacing}`;
    scrollMarginTop?: `scr-mt-${Spacing}`;
    scrollMarginBottom?: `scr-mb-${Spacing}`;
    scrollMarginLeft?: `scr-ml-${Spacing}`;
    scrollMarginRight?: `scr-mr-${Spacing}`;
    scrollSnapAlign?: 'snap-start' | 'snap-center' | 'snap-end' | 'snap-align-none';
    scrollSnapStop?: 'snap-normal' | 'snap-always';
}
export interface AspectRatioStyle {
    aspectRatio?: 'ar-square' | 'ar-video';
    aspectRatiowidth?: `arw-${AspectRatio}`;
    aspectRatioHeight?: `arh-${AspectRatio}`;
}
export interface GradientStyle {
    fromPosition?: `fp-${Percentage}`;
    fromColor?: `fc-${GradientColor}`;
    fromOpacity?: `fo-${Opacity}`;
    viaPosition?: `vp-${Percentage}`;
    viaColor?: `vc-${GradientColor}`;
    viaOpacity?: `vo-${Opacity}`;
    toPosition?: `tp-${Percentage}`;
    toColor?: `tc-${GradientColor}`;
    toOpacity?: `to-${Opacity}`;
}
export interface TypograpyStyle {
    font?: `f-${FontSize}`;
    fontFamily?: `ff-${Font}`;
    fontSize?: `fs-${FontSize}`;
    fontWeight?: 'fw-100' | 'fw-200' | 'fw-300' | 'fw-400' | 'fw-500' | 'fw-600' | 'fw-700' | 'fw-800' | 'fw-900' | 'fw-inherit';
    fontSmoothing?: 'antialiased' | 'subpixel-antialiased';
    fontVariantNumeric?: 'normal-nums' | 'ordinal' | 'slashed-zero' | 'lining-nums' | 'oldstyle-nums' | 'proportional-nums' | 'tabular-nums' | 'diagonal-fractions' | 'stacked-fractions';
    letterSpacing?: `ls-${LetterSpacing}` | `-ls-${LetterSpacing}`;
    lineHeight?: `lh-${LineHeight}`;
    lineClamp?: `lc-${LineClamp}`;
    textAlign?: 'ta-left' | 'ta-center' | 'ta-right' | 'ta-justify' | 'ta-start' | 'ta-end';
    verticalAlign?: 'va-baseline' | 'va-top' | 'va-middle' | 'va-bottom' | 'va-text-top' | 'va-text-bottom' | 'va-sub' | 'va-super';
    textWrap?: 'text-wrap' | 'text-nowrap' | 'text-balanced' | 'text-pretty';
    wordBreak?: 'break-all' | 'break-words' | 'break-keep' | 'break-normal';
    textTransform?: 'uppercase' | 'lowercase' | 'capitalize' | 'normal-case';
    textOverflow?: 'text-ellipsis' | 'text-clip' | 'truncate';
}
export interface BaseStyle extends OpacityStyle, VisibilityStyle, PositionStyle, OverflowStyle, TransformStyle, TransitionStyle, InteractivityStyle, DisplayStyle, ScrollItemStyle, FlexGridItemStyle, GradientStyle {
}
export interface ContentStyle extends ContentColorStyle, BaseStyle, MarginStyle, SizeStyle, ShadowStyle {
}
export interface ContainerStyle extends ContainerColorStyle, BaseStyle, PaddingStyle, MarginStyle, SizeStyle, BorderStyle, ShadowStyle, AspectRatioStyle {
}
export interface BlockStyle extends ContainerColorStyle, BaseStyle, BorderStyle, MarginStyle, SizeStyle, ShadowStyle, AspectRatioStyle {
}
export interface FlexStyle extends ContainerStyle {
    justifyContent?: 'jc-start' | 'jc-end' | 'jc-center' | 'jc-between' | 'jc-around' | 'jc-evenly';
    alignItems?: 'ai-start' | 'ai-end' | 'ai-center' | 'ai-stretch' | 'ai-baseline';
    alignContent?: 'ac-start' | 'ac-end' | 'ac-center' | 'ac-between' | 'ac-around' | 'ac-evenly' | 'ac-stretch';
    direction?: 'flex-row' | 'flex-col' | 'flex-row-reverse' | 'flex-col-reverse';
    wrap?: 'flex-wrap' | 'flex-nowrap' | 'flex-wrap-reverse';
    gap?: `g-${Gap}`;
}
export interface GridStyle extends ContainerStyle {
    templateCols?: `gtc-${GridTemplateTrack}`;
    templateColsSize?: `gtcs-${GridTrackMinMax}`;
    templateColsMin?: `gtcm-${GridTrackMinMax}`;
    templateColsMax?: `gtcx-${GridTrackMinMax}`;
    templateRows?: `gtr-${GridTemplateTrack}`;
    templateRowsSize?: `gtrs-${GridTrackMinMax}`;
    templateRowsMin?: `gtrm-${GridTrackMinMax}`;
    templateRowsMax?: `gtrx-${GridTrackMinMax}`;
    autoCols?: `gac-${GridTrackMinMax}`;
    autoColsMin?: `gacm-${GridTrackMinMax}`;
    autoColsMax?: `gacx-${GridTrackMinMax}`;
    autoRows?: `gar-${GridTrackMinMax}`;
    autoRowsMin?: `garm-${GridTrackMinMax}`;
    autoRowsMax?: `garx-${GridTrackMinMax}`;
    autoFlow?: 'gaf-row' | 'gaf-col' | 'gaf-row-dense' | 'gaf-col-dense' | 'gaf-dense';
    gap?: `g-${Gap}`;
    gapX?: `gx-${Gap}`;
    gapY?: `gy-${Gap}`;
    placeItems?: 'pi-start' | 'pi-end' | 'pi-center' | 'pi-stretch' | 'pi-baseline';
    placeContent?: 'pc-start' | 'pc-end' | 'pc-center' | 'pc-stretch' | 'pc-around' | 'pc-evenly' | 'pc-between' | 'pc-baseline';
    justifyItems?: 'ji-start' | 'ji-end' | 'ji-center' | 'ji-stretch';
    justifyContent?: 'jc-start' | 'jc-end' | 'jc-center' | 'jc-between' | 'jc-around' | 'jc-evenly';
    alignItems?: 'ai-start' | 'ai-end' | 'ai-center' | 'ai-stretch' | 'ai-baseline';
    alignContent?: 'ac-start' | 'ac-end' | 'ac-center' | 'ac-between' | 'ac-around' | 'ac-evenly' | 'ac-stretch';
}
export interface ButtonStyle extends FlexStyle {
}
export interface IconStyle extends ContentStyle, AspectRatioStyle {
}
export interface HrStyle extends MarginStyle, BaseStyle, ShadowStyle, ContainerColorStyle {
    type?: 'vertical' | 'horizontal';
    length?: `len-${Sizing}`;
    thickness?: `thk-${BorderWidth}`;
}
export interface ImageStyle extends ContentStyle, BorderStyle, ObjectStyle, AspectRatioStyle {
}
export interface TextStyle extends BaseStyle, ContentColorStyle, MarginStyle, ShadowStyle, TypograpyStyle {
    width?: 'w-auto' | 'w-full';
    height?: 'h-auto' | 'h-full';
    size?: 'sz-auto' | 'sz-full';
}
export interface SpanStyle extends OpacityStyle, VisibilityStyle, PositionStyle, TransformStyle, TransitionStyle, InteractivityStyle, DisplayStyle, GradientStyle, ContentColorStyle, MarginStyle, ShadowStyle, TypograpyStyle {
}
export interface SpinnerStyle extends BaseStyle, MarginStyle {
    size?: 'spinner-s' | 'spinner-m' | 'spinner-l' | 'spinner-xl';
    color?: `bc-${Color}`;
}
export interface TableStyle extends ContainerStyle {
    borderCollapse?: 'border-collapse' | 'border-separate';
    borderSpacing?: `bsp-${Spacing}`;
    borderSpacingX?: `bspx-${Spacing}`;
    borderSpacingY?: `bspy-${Spacing}`;
    tableLayout?: 'table-auto' | 'table-fixed';
}
export interface TableItemStyle extends ContainerStyle {
    textAlign?: 'ta-left' | 'ta-center' | 'ta-right' | 'ta-justify' | 'ta-start' | 'ta-end';
    verticalAlign?: 'va-top' | 'va-middle' | 'va-bottom' | 'va-baseline' | 'va-text-top' | 'va-text-bottom' | 'va-sub' | 'va-super';
}
export interface InputStyle extends ContainerStyle, Omit<TypograpyStyle, 'lineClamp' | 'textWrap' | 'wordBreak' | 'textOverflow'> {
}
export interface TextareaStyle extends ContainerStyle, Omit<TypograpyStyle, 'lineClamp' | 'textWrap' | 'wordBreak' | 'textOverflow'> {
    scrollBar?: 'scr-visible' | 'scr-hover' | 'scr-hidden';
    scrollBehavior?: 'scr-smooth' | 'scr-auto';
    scrollBarSize?: `sbs-${BorderWidth}`;
    scrollBarColor?: `sbc-${Color}`;
    resize?: 'resize-none' | 'resize-y' | 'resize-x' | 'resize';
}
export interface CheckBoxStyle extends BaseStyle, MarginStyle {
    size?: 'chk-s' | 'chk-m' | 'chk-l';
    color?: 'chk-neutral' | 'chk-primary' | 'chk-secondary' | 'chk-tertiary';
    direction?: 'flex-row' | 'flex-col' | 'flex-row-reverse' | 'flex-col-reverse';
    justifyContent?: 'jc-start' | 'jc-end' | 'jc-center' | 'jc-between' | 'jc-around' | 'jc-evenly';
    alignItems?: 'ai-start' | 'ai-end' | 'ai-center' | 'ai-stretch' | 'ai-baseline';
    wrap?: 'flex-wrap' | 'flex-nowrap' | 'flex-wrap-reverse';
    gap?: `g-${Gap}`;
}
export interface ScrollStyle extends FlexStyle {
    scrollPadding?: `scr-p-${Spacing}`;
    scrollPaddingX?: `scr-px-${Spacing}`;
    scrollPaddingY?: `scr-py-${Spacing}`;
    scrollPaddingTop?: `scr-pt-${Spacing}`;
    scrollPaddingBottom?: `scr-pb-${Spacing}`;
    scrollPaddingLeft?: `scr-pl-${Spacing}`;
    scrollPaddingRight?: `scr-pr-${Spacing}`;
    scrollSnapType?: 'snap-x' | 'snap-y' | 'snap-both' | 'snap-none' | 'snap-mandatory' | 'snap-proximity';
    scrollBar?: 'scr-visible' | 'scr-hover' | 'scr-hidden';
    scrollBehavior?: 'scr-smooth' | 'scr-auto';
    scrollBarSize?: `sbs-${BorderWidth}`;
    scrollBarColor?: `sbc-${Color}`;
}
export {};
